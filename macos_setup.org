#+TITLE: macos_setup
#+BIND: org-export-use-babel nil
#+AUTHOR: jeroen jagt
#+EMAIL: <jpjagt@pm.me>
#+DATE: September 14, 2022
#+LATEX: \setlength\parindent{0pt}
#+LATEX_HEADER: \usepackage{minted}
#+LATEX_HEADER: \usepackage[margin=1.2in]{geometry}
#+LATEX_HEADER: \usepackage{mathpazo}
#+LATEX_HEADER: \usepackage{adjustbox}
#+LATEX_HEADER_EXTRA:  \usepackage{mdframed}
#+LATEX_HEADER_EXTRA: \BeforeBeginEnvironment{minted}{\begin{mdframed}}
#+LATEX_HEADER_EXTRA: \AfterEndEnvironment{minted}{\end{mdframed}}
#+LATEX_HEADER_EXTRA: \BeforeBeginEnvironment{tabular}{\begin{adjustbox}{center}}
#+LATEX_HEADER_EXTRA: \AfterEndEnvironment{tabular}{\end{adjustbox}}
#+MACRO: NEWLINE @@latex:\\@@ @@html:<br>@@
#+PROPERTY: header-args :exports both :session macos_setup :cache :results value
#+OPTIONS: ^:nil
#+LATEX_COMPILER: pdflatex

here are some of the things i use in my macos setup.

* interesting products for reference

i don't use these but i might want to

** font manager: https://rightfontapp.com/

** 'talking head' video / video call: https://reincubate.com/camo/

** screenshot tool: https://cleanshot.com/

** site + app blockers

- https://getcoldturkey.com/
- https://freedom.to

* make dock hide/show more quickly

#+BEGIN_SRC sh
defaults write com.apple.dock autohide-delay -float 0; defaults write com.apple.dock autohide-time-modifier -int 0;killall Dock
#+END_SRC

* keybindings

put the following in =~/Library/KeyBindings/DefaultKeyBinding.dict=

#+BEGIN_SRC
{
    "~d" = "deleteWordForward:";
    "^w" = "deleteWordBackward:";
    "~f" = "moveWordForward:";
    "~b" = "moveWordBackward:";
    "^h" = "deleteBackward:";
}
#+END_SRC

** keyboard shortcuts

*** enable M-? in emacs

1. =System Preferences= -> =Keyboard= -> =Shortcuts= -> =App Shortcuts=
2. uncheck the =Show help menu= option

* emacs

there is a specific =macos_setup.org= in this dotfiles' .emacs.d.

* brew packages

#+BEGIN_SRC sh
brew install --cask raycast # A powerful alternative to Spotlight
brew install --cask protonmail-bridge # Secure email app bridge
brew install --cask shottr # Screenshot tool
brew install --cask hiddenbar # Hide menu bar items
brew install --cask imageoptim # Image compressor
brew install --cask cog # FLAC audio player
brew install --cask wireshark # Network protocol analyzer
brew install --cask touchdesigner # Visual development platform
brew install --cask alt-tab # Window switcher
brew install --cask screen-studio # Screen recording and streaming tool
brew install --cask monolith # Download web pages as a single HTML file
brew install --cask freecad # Open-source 3D modelling software
brew install --cask iina # open-source video player
brew install --cask whatsapp
brew install --cask cursor # ai-first code editor
brew install volta # javascript toolchain manager
brew install ruff # python formatter + linter
brew install rsnapshot # backups - see below
brew install --cask tripmode # control data usage
brew install --cask soulseek
#+END_SRC

* volta packages to install

#+BEGIN_SRC sh
volta install node
volta install npm
volta install yarn
volta install bun
volta install @biomejs/biome # linting + formatting
#+END_SRC

* rsnapshot (backups)

i made a config file in this dotfiles repo: [[./rsnapshot.conf]]

create a backup with:

#+BEGIN_SRC sh
rsnapshot -c /Users/jeroen/code/jpjagt/dotfiles/rsnapshot.conf main
#+END_SRC

* managing contacts with vdirsyncer

we install vdirsyncer, a tool to sync calendar + contacts to and fro various
repos. we will set this up to be used/manager with =vdirel= in emacs, and to
sync to the icloud service.

#+BEGIN_SRC sh
brew install vdirsyncer
#+END_SRC

then, we make a file =~/.vdirsyncer/config= and add the following config:

#+BEGIN_EXAMPLE
[general]
status_path = "~/.vdirsyncer/status/"

[pair contacts]
a = "contacts_local"
b = "contacts_icloud"
collections = ["from a", "from b"]

[storage contacts_local]
type = "filesystem"
path = "~/.contacts/"
fileext = ".vcf"

[storage contacts_icloud]
type = "carddav"
url = "https://contacts.icloud.com/"
username = "..."
password = "..."

# don't need this because i just use icloud calendar, but maybe useful for future
# [storage calendar_icloud]
# type = "caldav"
# url = "https://caldav.icloud.com/"
# username = "..."
# password = "..."
#+END_EXAMPLE

now, running
- =vdirsyncer discover= will index all the repos (you rarely need to do
  this)
- =vdirsyncer sync= will sync the contacts.

i use =vdirel= to interact with this local store at =~/.contacts/=, which is
configured in my =.emacs.d= config.

* mu4e + protonmail bridge

following this gist: https://gist.github.com/A6GibKm/238b754a4a90051f60906b9efa3e8000

install the following dependencies:

#+BEGIN_SRC sh
brew install isync gnupg mu
brew services start isync
#+END_SRC

first, we create =~/.mbsyncrc= and enter the following config. you can find
BRIDGE_PASSWORD within the Bridge app.

#+BEGIN_EXAMPLE
IMAPAccount protonmail
Host 127.0.0.1
Port 1143
User USERNAME@pm.me
Pass BRIDGE_PASSWORD
# PassCmd "gpg -q --for-your-eyes-only --no-tty -d ~/.authinfo.gpg | awk 'FNR == 1 {print $8}'"
SSLType STARTTLS
SSLVersions TLSv1.2
CertificateFile ~/Library/Application\ Support/protonmail/bridge/cert.pem

IMAPStore remote
Account protonmail

# You can change .mail to something else
MaildirStore local
Path ~/.mail/
Inbox ~/.mail/INBOX/
SubFolders Verbatim

Channel inbox
Far :remote:
Near :local:
Patterns *
Create Both
Expunge Both
SyncState *

Group protonmail
Channel inbox
#+END_EXAMPLE

then, we create (or append to) =~/.authinfo= with the following, replacing the
relevant info.

#+BEGIN_EXAMPLE
machine 127.0.0.1 port 1143 login USERNAME@pm.me password BRIDGE_PASSWORD
machine 127.0.0.1 port 1025 login USERNAME@pm.me password BRIDGE_PASSWORD
#+END_EXAMPLE

then, encrypt this file with with =cd ~ && gpg --symmetric .authinfo=. (run in
terminal, not emacs shell). you might need to install gnupg: =brew install
gnupg=.

then, delete (this info from) =~/.authinfo=.

then, run =mbsync protonmail= to get the mail. for mu4e configuration, check
the .emacs.d files.

* pure paste

automatically clears formatting and such from things you copy/paste. not
available via brew, so follow instructions here: https://sindresorhus.com/pure-paste

* disable hide window shortcut

needs to be done per app. for emacs:
- go to Keyboard Shortcuts -> App Shortcut -> Add Shortcut (for emacs)
- name: "Hide Emacs" (as it appears in menu bar)
- shortcut: something you will never press.

* reverse engineering

** charlesproxy

https://www.charlesproxy.com/latest-release/download.do

** ios apps

- hopperapp
- http://stevenygard.com/projects/class-dump/

* settings from youtube video

this video has some nice setting changes:

https://www.youtube.com/watch?v=Kft9Y33oc2I

* cog folder

the app =cog= can only open one folder. let's create symlinks to the actual
audio directories.

#+BEGIN_SRC sh
mkdir -p ~/cog-files
mkdir -p ~/cog-files/chinese

ln -s "/Users/jeroen/Documents/projects/chinese/chinese-textbook-1-audio" ~/cog-files/chinese/textbook-1
ln -s "/Users/jeroen/torrents/Takashi Kokubo" ~/cog-files/takashi-kokubo
#+END_SRC

* cloud (menu bar timer)

https://github.com/YYUUGGOO/Cloud

* cyan.graphics

image color converter etc

https://github.com/rodlie/cyan/releases/tag/1.2.4

* insert current date, etc

Recently, I converted to using ISO-8601 formatted dates as much as possible, e.g. `2020-06-12`. As a meme, I hope this catches on. Dates written this way are internationally recognizable, no confusion over `mm/dd/yy` or `dd/mm/yy`. They are sortable. And, when used consistently, they are easy to search; no worries about case sensitivity, or Jun/June spellings. Don’t take my word for it, though. [Randall Munroe](https://xkcd.com/1179/) agrees. So does [GitLab](https://about.gitlab.com/handbook/communication/#writing-style-guidelines).

Here's how to create a keyboard shortcut to insert the current date formatted as ISO-8601.

1. Launch Automator, and create a new Service.

2. This particular service receives no input.

3. Drag in Run AppleScript to the service.

4. The script I used to insert a date is:

```
on run {input, parameters}
        tell application "System Events"
                set _Date to (current date)
                set yyymmdd to (year of _Date as text) & "-" & ¬
                        text -2 thru -1 of ("00" & ((month of _Date) as integer)) & "-" & ¬
                        text -2 thru -1 of ("00" & ((day of _Date) as integer))
                keystroke yyymmdd
        end tell
end run
```

5. Save the service and remember the name.

6. Open System Preferences > Keyboard > Shortcuts and map the service to a
   useful keyboard shortcut. I use `Control`+`Option`+`Command`+`d`, because it
   doesn't overlap with any of my existing app shortcuts.

7. If the shortcut doesn't trigger in some apps, open System Preferences >
   Seciruty & Privacy > Accessibility and grant access to each app you want to
   allow to use the shortcut.

* spicetify - spotify extender

#+BEGIN_SRC sh
curl -fsSL https://raw.githubusercontent.com/spicetify/cli/main/install.sh | sh
npx degit spicetify/spicetify-themes ~/.config/spicetify/Themes
npx degit Sowgro/betterLibrary/CustomApps/betterLibrary ~/.config/spicetify/CustomApps/betterLibrary
#+END_SRC

usage:

#+BEGIN_SRC sh
spicetify config custom_apps betterLibrary
spicetify config extensions keyboardShortcut spicetify-marketplace
spicetify backup apply enable-devtools
#+END_SRC
